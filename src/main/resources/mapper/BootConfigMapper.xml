<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sg.vue.bootconfig.BootConfigMapper" >

  <resultMap id="BaseResultMap" type="com.sg.vue.bootconfig.BootConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="config_type" property="configType" jdbcType="VARCHAR" />
    <result column="config_value" property="configValue" jdbcType="VARCHAR" />
    <result column="value_des" property="valueDes" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, config_type, config_value, create_time, update_time, flag,value_des
  </sql>

  <select id="selectConfig" resultMap="BaseResultMap" parameterType="com.sg.vue.bootconfig.BootConfig" >
    select 
    <include refid="Base_Column_List" />
    from boot_config
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=INTEGER}
      </if>
      <if test="configType != null and configType !='' " >
       and  config_type = #{configType,jdbcType=VARCHAR}
      </if>
      <if test="flag != null and flag !='' " >
        and  flag = #{flag,jdbcType=VARCHAR}
      </if>
    </where>
  </select>


  <select id="initConfigTypes" resultType="java.util.Map">
    select distinct config_type "value",type_des "label" from boot_config
  </select>

  <insert id="insertSelective" parameterType="com.sg.vue.bootconfig.BootConfig" >
    insert into boot_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="configType != null" >
        config_type,
      </if>
      <if test="configValue != null" >
        config_value,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configType != null" >
        #{configType,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.sg.vue.bootconfig.BootConfig" >
    update boot_config
    <set >
      <if test="configType != null" >
        config_type = #{configType,jdbcType=VARCHAR},
      </if>
      <if test="configValue != null" >
        config_value = #{configValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>